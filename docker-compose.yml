# docker-compose.yml

version: "2"

networks:
  sql-statement:

volumes:
  mysql-data-volume:
  node-modules-volume:
  npm-cache-volume:
  postgresql-data-volume:

services:
  # https://hub.docker.com/_/mariadb
  mysql:
    image: "mariadb:10.9.4"
    networks:
      - "sql-statement"
    hostname: "mysql"
    volumes:
      - "mysql-data-volume:/var/lib/mysql"
    environment:
      MYSQL_DATABASE: "test"
      MYSQL_USER: "test"
      MYSQL_PASSWORD: "test"
      MYSQL_ROOT_PASSWORD: "root"

  # https://hub.docker.com/_/postgres
  postgres:
    image: "postgres:15.1"
    networks:
      - "sql-statement"
    hostname: "postgres"
    volumes:
      - "postgresql-data-volume:/var/lib/postgresql"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "test"
      POSTGRES_DB: "test"

  # https://hub.docker.com/_/node
  node:
    image: "node:18.12.1"
    hostname: "node"
    networks:
      - "sql-statement"
    volumes:
      - "./:/sql-statement"
      - "node-modules-volume:/sql-statement/node_modules"
      - "npm-cache-volume:/.npm"
    environment:
      MYSQL_HOST: "mysql"
      MYSQL_USER: "test"
      MYSQL_PASSWORD: "test"
      PGHOST: "postgres"
      PGUSER: "postgres"
      PGPASSWORD: "test"
      PGDATABASE: "test"
    command: ["bash", "-c", "cd /sql-statement && npm install && npm run build && npm test"]

